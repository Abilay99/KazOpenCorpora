С<np> философия<n> Б<np> С<np> дизайн<n> және<cnjcoo> C<np>тың<adj> эволюция<n> *кiтабында ол<prn> C<np>н<np> жобала<v> ұстап тұр<v> қағида<n> с<np>. бұл<det> қағида<n> C<np>т<np> дәл<adv> сол<prn> болат<n> ет<v> ұғындыр<v>. *Кейбiреулері М<np> статикалық<adj> т<np> бар<det> әмбебап<adj> т<np> арқылы<post>, т<np> және<cnjcoo> C<np> т<np> т<np> ал<v>. программала<v> с<np> жиын<n> т<np> және<cnjcoo> жан-жақ<n> қолдау<n>+е<cop>, сол<prn> i<np> процедура<n> программалау<n>+е<cop>, м<np> абстракция<n>+е<cop>, *объективтiх<guio>хабар<n> программала<v>. ек<v> таңда<v> бостандық<n> бағдарламашы<n>, жалпыла<v> программала<v> бұл<prn> б<np> таңда<v> м<np> ол<prn> т<np> б<np>. C<num> мен<cnjcoo> ү<np> C<np>*қа программала<v> *жеңiл өт<v> нақ<adj> сол<prn> ет<v> барынша<adv> сақта<v>. ол<prn> ә<np> т<np> б<np> б<np> *қойылсада және<cnjcoo> бағдарлама<n> ылғи<adj> б<np> м<np>х<guio>құлық<n> әкел<v> т<np> е<np> т<np> т<np> м<np> кез<n> кел<v> конструкция<n> C<np> және<cnjcoo> C<np>н<np> аралық<n> т<np> оқы<v> құтыл<v>. платформа<n> т<np> бол<v> немесе<cnjcoo> әмбебап<adj> болып табыл<v> е<np> бой<n> жасыр<v>. ешқандай<det> да<cnjcoo> т<np> құрал<n> ол<prn> қолдан<v> е<cop>, бағдарлама<n> ө<np> т<np> алып<adj> *келуi керек<adj>+е<cop>. өте<adv> *күрделендiрiлген программала<v> орта<n> талап ет<v>. *Объективтiх<guio>хабар<n> м<np> Б<np> бұл<prn> м<np> с<np>, (<lpar>*ооп )<rpar> *объективтiх<guio>хабар<n> программала<v> бар<adj>, байланыс<v> т<np>, алайда<adv>, ә<np> маңызды<adj> *ооп мен<cnjcoo> қат<v> мүмкіндік<n> жаса<v>. түр<n> C<np>*қа т<np> *келесi *кiрiстiрiлген түр<n> Н<np> *char, *wchart<np>. Б<np> сан<n> таңбалы<adj> *signed *char, *short i<np>, i<np>, (<lpar>және<cnjcoo> l<np> l<np> i<np>, C<np>*11дiң стандарт<n>)<rpar> l<np> i<np>. Б<np> сан<n> т<np> *unsigned *char, *unsigned *short i<np>, *unsigned i<np>, (<lpar>және<cnjcoo> *unsigned l<np> l<np> i<np>, C<np>*11дiң стандарт<n>)<rpar> *unsigned l<np> i<np>. *Жүзитiн нүкте<n> *float, *double, l<np> *double. *Логикалығы t<np> және<cnjcoo> *false *bool, бол<v> мән<n>+е<cop>. салыстыр<v> операция<n> *boolдың т<np> қайтар<v>. өрнекте<v> *boolдың т<np> жақша<n> i<np>, *whileден *кейiн тура<adj> *келедi. функция<n> с<np> бойынша<post> дәлелде<v> қабылда<v> ал<vaux>. мысалы<ij>, x<abbr>3<num> (<lpar>i<np> x<abbr> )<rpar> *void *f функция<n> 3<num>х<guio>ш<np> м<np> өз<det> д<np> тағайында<v>. сол<prn> б<np> функция<n> с<np> бойынша<post> нәтиже<n> қайтар<v> ал<vaux>, және<cnjcoo> с<np> функция<n> бар<adj> тыс<post> әр<prn> т<np> байланыс<n> бол<v> ал<vaux>. мысалы<ij>, 3<num> *double *b*a (<lpar>*b )<rpar> *b*sin (<lpar>3<num> *a)<rpar> *sin 3<num> балама<n>+лы<post>. Б<np> д<np> с<np> программала<v> н<np>, *келесi е<np> ұқсас<adj> с<np> қолдан<v> алд<n> ат<n>х<guio>*жөнiн *көрсетуi керек<adj> с<np> ылғи<adj> б<np> мекенжай<n> ө<np> бойы<post> көрсет<v> с<np> өрнек<n> сол<det> объект<n> немесе<cnjcoo> ол<prn> *көрсететiн функция<n> объект<n> немесе<cnjcoo> функция<n> ү<np> н<np> е<np> н<np> арқылы<post> тала<v> е<np>, т<np> б<np> қой<v>. Н<np> және<cnjcoo> с<np> қолдан<v> тағы<postadv> басқа<adj> айырмашылық<n> бар бол<v>. С<np> концептуалды<adj> х<guio> басқа<adj> айнымалы<n> ат<n> немесе<cnjcoo> функция<n>, ылғи<adj> б<np> мекенжай<n> басқа<adj> ата<v>, тек<cnjcoo>+ғана<postadv> бағдарлама<n> м<np> бар бол<v> Ә<np> функция<n>х<guio>I<np> спецификатор<n> i<np> жарияла<v> м<np> б<np>. сын<v>, д<np> i<np> нақтылы<adj>, функция<n> үнде<v> бойынша<post> i<np> болып табыл<v>. I<np> бастапқы<adj> х<guio> функция<n> сияқ<n> ойла<v>, компилятор<n> функция<n> қара<v> сөйле<v>, орын<n> жан<n> бұл<det> функция<n> д<np> қой<v> ықшамда<v> жақсы<adj> кандидат<n> шақыр<v> код<n> е<cop> бол<v>. компилятор<n> шындық<n> i<np> ү<np> д<np> алмастыр<v> i<np> асыр<v> м<np> е<cop>. Б<np> м<np> жағдай<n>+е<cop>, i<np> сияқты<adv> жарияла<v> функция<n> ү<np> д<np> алмастыр<v> ықшамда<v> қалған<adj> б<np> сүйен<v> орында<v>. абзал<adj>, i<np> өте<adv> мағыналы<adj> е<np> функция<n>+е<cop>, ол<prn> Є<np> i<np> х<guio> функция<n> ол<prn> *қолданылатындығынан хабар<n> *жүргiзеді, барлық<adj> б<np> анықта<v> керек<adj>+е<cop>. хабар<n> *жүргiзудiң б<np> б<np> д<np>х<guio>д<np> анықта<v> ал<vaux> болып табыл<v>, осы уақытта<adv> i<np> бол<v> функция<n> бағдарлама<n> б<np> рет<n> ас<v> ет<v> анықта<v> ал<vaux>. *Volatile суреттеме<n> айнымалы<n> сипаттама<n> қолдан<v> және<cnjcoo> мән<n> осы<det> айнымалы<n> компилятор<n> i<np> тап<v> ал<vaux> ә<np> ө<np> ал<v> р<np> компилятор<n> м<np> б<np>. мысалы<ij>, *volatile *жариялалған айнымалы<n> компилятор<n> ү<np> айнымалы<n> ол<prn> мән<n> е<np> ол<prn> *қақшулардың ара<n> аралық<n> айнымалы<n> м<np> ө<np> т<np> р<np> )<rpar> сыйғыз<v> сал<vaux> *жадтарындағы жағдай<n> *құбылғыш ықшамда<v> құрал<n> қолдан<v> керек<adj>+е<cop>. *struct Time<np> Time<np> t<np>, t<np> n<np> Foo<np> *using n<np> Foo<np> Ат<np> *кеңiстiгi. функция<n> және<cnjcoo> түр<n> дәл<adv> *келетiн атта<v>, *глобалдi айнымалы<n> бол<v> п<np> ара<n> қайшылық<n> пайда бол<v> ү<np> керек<adj>+е<cop>. бұл<prn> суретте<v> айтыл<v> барлық<adv> атта<v> хабар<n> *жүргiзудiң ағымдағы<adj> б<np> т<np>. Б<np> немесе<cnjcoo> б<np> соң<adv> д<np> функция<n> үнде<v> б<np> б<np> ал<v>. ек<v> функция<n>+е<cop> (<lpar>i<np> x<abbr>, i<np> *y5<num>, i<np> *z10<num>)<rpar> *void *f сияқты<adv> сипатта<v>, мысал<n>, (<lpar>1<num> )<rpar> *fтiң шақыр<v>, (<lpar>1<num>, 5<num>)<rpar> *f және<cnjcoo> (<lpar>1<num>, 5<num>, 10<num>)<rpar> *f балама<n>+лы<post> бол<v>. *struct S<np> S<np>T<np> *y Д<np> жоқтық<n> функция<n> сипаттама<n> жақша<n> б<np>, с<np> қара<v>. мысалы<ij>, ек<v> дәлелде<v> *const *char *fmt i<np> *printf көп<adj> нүкте<n> . б<np> бол<v>, пайдалан<v> керек<adj>+е<cop>. )<rpar>. *void P<np>(<lpar>i<np> x<abbr>)<rpar>*void P<np>(<lpar>*double x<abbr>)<rpar>*void P<np>(<lpar>i<np> x<abbr>, i<np> *y)<rpar> құрылым<n> i<np> немесе<cnjcoo> сын<v> қабатта<v> t<np> арқылы<post> түр<n> суретте<v> бол<v>, сол<det> сияқ<n> бас<n> *класстар, сол<prn> б<np> т<np> сипаттама<n> арқылы<post> суретте<v>. *struct Date<np> i<np> *day, *month, *year*void *operator (<lpar>*struct Date<np> *date)<rpar> ылғи<adj> б<np> ат<n> бар<adj> б<np> функция<n> бол<v> ал<vaux>, б<np> функция<n> шамадан тыс<adv> *жүктеуi ә<np> түр<n> немесе<cnjcoo> д<np> сан<n> шамадан тыс<adv> жүкте<v> бұл<det> түр<n> *қайтарылатын мән<n> ықпал<adj> е<np>. қолданбалы<adj> түр<n> *кейбiр оператор<n> мағына<n> қарай<post> т<np> *операторлық функция<n>, хабарла<v> арқылы<post> анықта<v> бол<v>. *Операторлық функция<n> *көпшiлiгiнде *кәдiмгi функция<n> ұқсас<adj>. New<np>, n<np> оператор<n>, *delete және<cnjcoo> *delete қос<v> қайта<adv> анықта<v> м<np> е<cop> (<lpar>а<np>, )<rpar> C<np> жоқ бол<v> жаңа<adj> оператор<n> ойлап шығар<v> бол<v> операнд<n> оператор<n> ү<np> е<np> сан<n> өзгерт<v> бол<v>, сол<prn> б<np> (<lpar>а<np>, *a*b*cтың ө<np> бастапқы<adj> көбейт<v> орында<v> е<np>, түр<n> *a, *b және<cnjcoo> *cтер жат<v> қос<v> сол<prn> соң<adv> орында<v>)<rpar> оператор<n> *қазiргi басымдылық<n> және<cnjcoo> а<np> өзгерт<v> бол<v>. (<lpar>б<np> параметр<n>)<rpar> операция<n> қайта<adv> анықта<v> бол<v> және<cnjcoo> (<lpar>п<np> кез<n> кел<v> сан<n>)<rpar>. (<lpar>t<np> )<rpar> ү<np> қосыл<v>. мысалы<ij>, *y r<np> x<abbr> (<lpar>T<np> x<abbr>, T<np> *y)<rpar> T<np> M<np> *class T<np> t<np> ма<qst>? ол<prn>қас<n> кез<n> кел<v> түр<n> ү<np> M<np> функция<n> анықта<v>. ү<np> функция<n>+ғана<postadv> е<cop>, түр<n>+да<cnjcoo> тапсырма<n> бер<v> ал<vaux>. мысалы<ij>, i<np> l<np> *struct Array<np> *class T<np> t<np> T<np> *val кез<n> кел<v> т<np> м<np> массив<n> анықта<v>, не<cnjcoo> б<np> *кейiн x<abbr> *float Array<np> ал<v> Malloc<np> және<cnjcoo> *free функция<n> қосымша<adj> р<np> *operator n<np>, *operator n<np> *операторлық функция<n>+е<cop>, *operator *delete және<cnjcoo> *operator *delete, сол<prn> б<np> n<np>, n<np> оператор<n>, *delete және<cnjcoo> *delete е<np>. ек<v> T<np> х<guio> бол<v> X<np>х<guio>ш<np> кез<n> кел<v> массив<n> түр<n> бол<v> *объектiнiң т<np> х<guio> бол<v> кез<n> кел<v> *объектiнiң түр<n> және<cnjcoo> A<np> х<guio> бол<v> X<np>х<guio>ш<np> түр<n> бол<v> *элементтердiң n<np> сан<n> массив<n> т<np> *кейбiр бол<v> мысалы<ij>, n<np> T<np> (<lpar>*operator n<np> функция<n> шақыр<v> арқылы<post> )<rpar>, т<abbr>х<guio>тың<adj> т<np> б<np> *объектiнiң орналастыр<v> ү<np> *жеткiлiктi бол<v> м<np>, *жад объект<n> бұл<det> ат<n>х<guio>*жөнiн *көрсетедi және<cnjcoo> т<abbr>н<np> т<np> н<np> қайтар<v> ал<vaux>, *жадтың ә<np> объект<n> бұл<det> ат<n>х<guio>*жөнiді *көрсетедi, және<cnjcoo> n<np> X<np> *p n<np> X<np> X<np>с<np> т<np> н<np> қайтар<v>)<rpar> *жадты е<np>. мысалы<ij>, *p n<np> T<np> т<n>+е<cop>. n<np> n<np> X<np> және<cnjcoo> n<np> A<np> (<lpar> *operator n<np> *функцияын шақыр<v> арқылы<post>)<rpar> *жадтарды е<np>, *delete *pның т<np> *объекттерiнiң n<np>х<guio>н<np> орналастыр<v> ү<np> *жеткiлiктi X<np>, х<guio> *pх<guio>н<np> н<np> с<np> (<lpar>бол<v> массив<n>)<rpar> объект<n> және<cnjcoo> ө<np> (<lpar>*operator *deleteның функция<n> шақыр<v> арқылы<post>)<rpar> *жадтың ол<prn> n<np> ү<np> бұрын<adv> ерекшеле<v> облыс<n> босат<v> *delete *p х<guio> *pның н<np> с<np> массив<n> ә<np> объект<n> және<cnjcoo> ө<np> *operator *deleteның функция<n> шақыр<v> арқылы<post>)<rpar> *жадтың n<np> массив<n> ол<prn> ү<np> бұрын<adv> ерекшеле<v> облыс<n> босат<v>. 

